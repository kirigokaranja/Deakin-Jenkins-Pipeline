pipeline {

    agent any

    environment {
        EMAIL_RECIPIENT = 's223972975@deakin.edu.au'
    }

    stages {
        stage('Build'){
            steps {
                echo "Build the code using a build automation tool to compile and package the code. The automation tool used is npm or webhook"
            }
        }

        stage('Unit and Integration Tests'){
            steps {
                echo "Unit tests are performed and usually cover a single function and cover a small portion of the overall code. Automation tools used for this include Jest"
                echo "Integration tests involve testing the interaction between different components. Automation tools used for this include Cypress."
            }

             post {
                always {
                    script {
                        def logs = readFile 'build.log'
                    }

                    emailext(
                        to: $EMAIL_RECIPIENT,
                        subject: "Unit and Integration Tests Build Status email",
                        body: """

                        The Jenkins unit and integration tests stage has finished running

                        - Build Number: $BUILD_NUMBER
                        - Status: $currentBuild.currentResult

                        Find attached logs for more details.
                        """,
                        attachmentsPattern: 'build.log',
                        attachLog: true,
                        mimeType: 'text/plain'

                    )
                    
                }
            }
        }

        stage('Code Analysis'){
            steps {
                echo "Analyze the code using SonarQube to ensure it meets industry standards."
            }
        }

        stage('Security Scan'){
            steps {
                echo "Perform a security scan on the code using OWASP to identify any vulnerabilities"
            }

             post {
                always {
                    mail to: $EMAIL_RECIPIENT,
                    subject: "Security Scan Build Status email",
                    body: "Security scan stage is ${currentBuild.currentResult}"
                }
            }
        }

        stage('Deploy to Staging'){
            steps {
                echo "Deploy to application to staging server using AWS CloudFormation or Azure Storage"
            }
        }

        stage('Integration Tests on Staging'){
            steps {
                echo "Using Selenium to run integration tests on the staging environment to ensure the application functions as expected in a production-like environment"
            }

             post {
                always {
                    mail to: $EMAIL_RECIPIENT,
                    subject: "Integration Tests on Staging Build Status email",
                    body: "Build was successful"
                }
            }
        }

        stage('Deploy to Production'){
            steps {
                echo "Deploy to application to production server using AWS CloudFormation"
            }
        }
    }
}
